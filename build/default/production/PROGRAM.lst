MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; operating BUILD CONFIGURATIONS drop down menu in the DEBUG toolbar
                      00002 ; FOR SIMULATIONS with MPLAB SIM: select "Debug" this will switch off delays that take thousands of inst
                            ructions
                      00003 ; HARDWARE: select "Release" all delays will be on
                      00004 
                      00005 ; Provided code - do not edit  
                      00006 ; This include setups up various configuration bits for the microcontroller
                      00007 ; we are using, and importantly reserves space for variables.
                      00008 ; If you need to use more variables, please place them in VAR.INC, which you
                      00009 ; can find under the "Header Files" folder. The variables listed there will be
                      00010 ; placed in the first memory bank.
                      00011 ; This code has been provided for you to simplify your work, but you should be
                      00012 ; aware that you cannot ignore it.
                      00013 #include        ECH_1.inc
                      00001 
                      00002 ; ECH_1.inc - to be put before your SUBROUTINES         
                      00003 
                      00004 
                      00005 ; DEFINITIONS related to the PIC and board used
                      00006 ; DO NOT EDIT ! ! !
                      00007 
                      00008 
                      00009 ; this #include enables use of register and bit names from the datasheet
                      00010 ; consists of 
                      00011 ; SymbolicName EQU NumericalValue   ; equates symbolic names to appropriate bit patterns
                      00012 #include <p16F887.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 06 2020
                      00005 ;  MPASM PIC16F887 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2020 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00810         LIST
                      00013 ; ! the name of the file should match the PIC microcontroller part name
                      00014 
                      00015 
                      00016 ; setting the CONFIG1 configuration bits - required, explained at the end of the lecture course
2007   00A4           00017         __CONFIG        _CONFIG1, _INTOSCIO & _WDT_OFF & _PWRTE_ON & _MCLRE_ON & _CP_ON & _CPD_OFF & _BO
                            R_OFF & _IESO_OFF & _FCMEN_OFF & _LVP_OFF & _DEBUG_ON
                      00018 ;       configuration bits from the original Microchip code
                      00019 ;       __CONFIG    _CONFIG1, _LVP_OFF & _FCMEN_OFF & _IESO_OFF & _BOR_OFF & _CPD_OFF & _CP_OFF & _MCLRE
                            _OFF & _PWRTE_ON & _WDT_OFF & _INTRC_OSC_NOCLKOUT
                      00020 ;
                      00021 ; _INTOSCIO - use internal 4 MHz oscillator, RA6 and RA7 pins are used for I/O
                      00022 ; _WDT_OFF - the watchdog timer is DISABLED and can be enabled by SWDTEN bit of the WDTCON register
                      00023 ; _PWRTE_ON - power up timer - ENABLED
                      00024 ; _MCLRE_ON - master clear pin function - ENABLED
                      00025 ; _CP_OFF - program memory protection - DISABLED
                      00026 ; _CPD_OFF - EEPROM protection - DISABLED
                      00027 ; _BOR_OFF - brown out reset - DISABLED
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00028 ; _IESO_OFF - internal external oscillator switchover - DISABLED
                      00029 ; _FCMEN_OFF - fail safe clock monitor - DISABLED
                      00030 ; _LVP_OFF - low voltage programming - DISABLED
                      00031 ; _DEBUG_ON - in circuit debugger - ENABLED, pins RB6 and RB7 are used by it
                      00032 ; (these and all the other available options are specified in the p16F887.inc file
                      00033 ; ! the best practice is to ALWAYS specify all the bits in the code
                      00034 
                      00035 ; setting the CONFIG2 configuration bits - required, explained at the end of the lecture course
2008   3EFF           00036         __CONFIG        _CONFIG2, _WRT_OFF & _BOR21V
                      00037 ;       as in the Microchip original code
                      00038 ;
                      00039 ; _WRT_OFF - program memory self write function - OFF
                      00040 ; _BOR21V - brown out reset voltage set to 2.1 V (this feature is disabled anyway in CONFIG1 above)
                      00041 
                      00042 
                      00043 #include                ECH_EQU.inc     ; for EQU statements related to the 44 pin demo board wiring of 
                            PORTD and RB0
                      00001 ;       symbolic name for the port connected to LEDs (PORTD)
  00000008            00002 LEDs    EQU             PORTD
                      00003 ;       symbolic names for individual LEDs for BSF and BCF
  00000000            00004 LD0             EQU             0
  00000001            00005 LD1             EQU             1
  00000002            00006 LD2             EQU             2
  00000003            00007 LD3             EQU             3
  00000004            00008 LD4             EQU             4
  00000005            00009 LD5             EQU             5
  00000006            00010 LD6             EQU             6
  00000007            00011 LD7             EQU             7
                      00012 ;
                      00013 ; e.g.  BSF             LEDs, LD3       ; to switch LD3 on
                      00014 ;               BCF             LEDs, LD5       ; to switch LD5 off
                      00015 
                      00016 ; use the following macros to test the switch
                      00017 #define skipRel         btfss PORTB,RB0 ; skip the next instruction if button is released
                      00018 #define skipPre         btfsc PORTB,RB0 ; skip the next instruction if the button is pressed
                      00044 
                      00045 
                      00046 ; ALLOCATION of user RAM, starts where SFRs end at 0x20
                      00047 gr1             udata           ; GPRs for bank 1                                                       
                      00048                 include         VAR.inc         ; YOUR VARIABLES from this file
                      00001 ; list names of your variables one in a row below
                      00002 ; each of them will be allocated a GPR
                      00003 ; and can be referenced by name in your code
                      00004 ; (the assembler will place actual address automatically)
                      00005 ; examples:
                      00006 ;Ctr1   RES     1       ; your vaiable, e.g., for counter 1
                      00007 ;Ctr2   RES     1
0000                  00008 Temp    Res     1       ; this is used by the examples
0001                  00009 A               Res     1
0002                  00010 Bop             Res     1
                      00011 
0003                  00012 ConfigMode      Res     1
0004                  00013 ModeSelect      Res     1
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00014                 
0005                  00015 VariablePWMInitComplete     Res 1               
0006                  00016 VariablePWMConfig1  Res 1
0007                  00017 SpeedSelectPWM      Res 1
0008                  00018 VariablePWMConfig2  Res 1
0009                  00019 Brightness1         Res 1
000A                  00020 VariablePWMConfig3  Res 1
000B                  00021 Brightness2         Res 1
000C                  00022 LoopCountdown       Res 1
000D                  00023 LoopCountup         Res 1
                      00024 
000E                  00025 StrobeInitComplete  Res 1
000F                  00026 count               Res 1
0010                  00027 countTemp           Res 1                   
0011                  00028 led_pattern         Res 1
0012                  00029 SidetoSideConfig1   Res 1
0013                  00030 speedSelect         Res 1
0014                  00031 SidetoSideConfig2   Res 1
0015                  00032 direction_select    Res 1
0016                  00033 current_direction   Res 1
                      00034                 
0017                  00035 LinearFeedbackInitComplete Res 1 
0018                  00036 LFSR_reg            Res 1
0019                  00037 poly                Res 1
001A                  00038 LinearFeedbackConfig1   Res 1
001B                  00039 LSFR_time   Res 1
001C                  00040 LFSR_regtemp    Res 1
                      00041    
                      00042 
                      00043 
                      00049                 include         ECH_VAR.inc     ; variables required for subroutines
                      00001 ; ECH_VAR.INC - declaration of variables used in the AK subroutines
                      00002 
001D                  00003 D_Ctr1  RES     1       ; could be more than 1 byte, e.g., for int or float
001E                  00004 D_Ctr2  RES     1       ; 1 byte (one GPR) is reserved here and below
001F                  00005 D_Ctr3  RES     1
0020                  00006 R_Old   RES     1
0021                  00007 S_Tmp           RES     1       ; scratch pad registers
0022                  00008 S_Tmp1  RES     1
                      00009 ; the above variables could be named like Tmp1 Tmp2 etc, and used in
                      00010 ; the rest of the program if necessary to save RAM (not in the ISR though)
                      00050 gr2             udata           ; GPRs for bank 2 - none used
                      00051 ; GPRs for banks 3 and 4 can be defined as above
                      00052 gr3             udata_shr       ; these variables will be put to the RAM shared among all the banks (las
                            t 16 GPRs)      
0000                  00053 W_TMP   RES             1
0001                  00054 ST_TMP  RES             1
                      00055 
                      00056 
                      00057 ; CODE sections at different addresses
                      00058                 ; entry on reset - address 0x0 is fixed by PIC architecture
                      00059 V_RES   CODE    0x0
0000   30??           00060                 MOVLW   HIGH(Main)
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001   008A           00061             MOVWF   PCLATH
0002   2???           00062                 goto    Main
                      00063                 ; entry on interrupt - address 0x4 fixed by PIC architecture
                      00064 V_INT   CODE    0x4
0004   2???           00065                 goto    ISR
                      00066                 CODE    ; conventional placement of subroutines - before the INITIALISATION
                      00067 
                      00068 
                      00069 ; subroutines prepared for the coursework
                      00070                 include ECH_SUB.INC
                      00001 ; DO NOT EDIT ! ! !
                      00002 
                      00003 ; ECH_SUB.INC - subroutines supplied for
                      00004 ; delay for 1 ms  (Del_ms)
                      00005 ; delay for 1 ms  times W (DelWms)
                      00006 ; delay for 0.1 s times W (DelWds)
                      00007 
                      00008 
                      00009 #ifdef __DDEBUG         ; to facilitate in-circuit debugging -
                      00010                                 ; all delay subroutines return immediately as below
                      00011 
                      00012 Del_ms  return
                      00013 DelWms  return
                      00014 DelWds  return
                      00015 Del_100us       return
                      00016 
                      00017 #else                   ; this is the code to provide the delays
                      00018 
                      00019 ; precise delay for 100 us
                      00020 ; uses  D_Ctr1
                      00021 ; calls nothing         
0000                  00022 Del_100us
0000   301F           00023                 movlw   D'31'
0001   00??           00024                 movwf   D_Ctr1
Message[305]: Using default destination of 1 (file).
0002   0B??           00025 D_L4    decfsz  D_Ctr1
0003   2???           00026                 goto    D_L4
0004   0000           00027                 nop
0005   0000           00028                 nop
0006   0008           00029                 return
                      00030 ; precise delay for 1 ms
                      00031 ; uses  D_Ctr1
                      00032 ; calls nothing 
0007   30F8           00033 Del_ms  movlw   D'248'  ; value tuned at the debug stage
0008   00??           00034                 movwf   D_Ctr1
0009   0000           00035 D_L1    nop
000A   0B??           00036                 decfsz  D_Ctr1, F
000B   2???           00037                 goto    D_L1
000C   0000           00038                 nop
000D   0000           00039                 nop
000E   0000           00040                 nop
000F   0008           00041                 return
                      00042 ; not precise but approximate delay for W times 1 ms
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00043 ; uses  D_Ctr2
                      00044 ; calls Del_ms 
0010   00??           00045 DelWms  movwf   D_Ctr2
0011   2???           00046 D_L2    call    Del_ms
0012   0B??           00047                 decfsz  D_Ctr2, F
0013   2???           00048                 goto    D_L2
0014   0008           00049                 return
                      00050 ; not precise but approximate delay for W times 1 ds (0.1 s)
                      00051 ; uses  D_Ctr3
                      00052 ; calls DelWms 
0015   00??           00053 DelWds  movwf   D_Ctr3
0016   3064           00054 D_L3    movlw   D'100'
0017   2???           00055                 call    DelWms
0018   0B??           00056                 decfsz  D_Ctr3, F
0019   2???           00057                 goto    D_L3
001A   0008           00058                 return
                      00059 
                      00060 #endif
                      00061 
                      00062 
                      00063 ; reading the ADC with the delay for conversion
001B   149F           00064 ReadADC bsf             ADCON0, GO_DONE         ; strat the conversion
001C   1C9F           00065 RADC1   btfss   ADCON0, GO_DONE         ; test the DONE bit
001D   2???           00066                 goto    RADC1                           ; if not set, test again
001E   081E           00067                 movfw   ADRESH                          ; data ready => copy to W
001F   0008           00068                 return
                      00069 
                      00070 ; de-bouncing switches using a delay for 20 ms
                      00071 ; uses  R_Old
                      00072 ; calls DelWms 
0020                  00073 DeBounce
0020   0806           00074                 movfw   PORTB                   ; copy SwPort to W
0021   3901           00075                 andlw   B'00000001'             ; mask unused bits (one bit is in use only)
0022   00??           00076                 movwf   R_Old                   ; save data to a work register
0023   3014           00077                 movlw   D'20'
0024   2???           00078                 call    DelWms                  ; wait for 20 ms and read again
0025   0806           00079                 movfw   PORTB
0026   3901           00080                 andlw   B'00000001'             
0027   06??           00081                 xorwf   R_Old,W                 ; compare with the old value
0028   1D03           00082                 btfss   STATUS,Z
0029   2???           00083                 goto    DeBounce                ; if the value changed - do again
002A   08??           00084                 movfw   R_Old                   ; reading is stable => return it
002B   0008           00085                 return
                      00086 
                      00087 
                      00088 ; selecting one option out of four
                      00089 ; rotate the potentiometer to have the right LED on 
                      00090 ; then press the button to confirm
                      00091 ; LD4 is used to show that potentiometer input is on
002C                  00092 Select4
002C   0808           00093                 movfw   LEDs
002D   00??           00094                 movwf   S_Tmp1          ; LEDs -> Tmp1 to restore later
                      00095 
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002E   0188           00096 Sel4Rd  clrf    LEDs
002F   08??           00097                 movfw   S_Tmp1
0030   39C0           00098                 andlw   B'11000000'
0031   0088           00099                 movwf   LEDs            ; restore 3 MSB of LEDs
0032   1608           00100                 bsf             LEDs,LD4        ; indicator on
                      00101 
                      00102 ;               get the two MSBs of the ADC value
0033   2???           00103                 call    ReadADC
0034   39C0           00104                 andlw   B'11000000'     ; mask unused bits
0035   00??           00105                 movwf   S_Tmp                   ; copy MSBs only
                      00106 
                      00107 ;               analyse two MSBs of the ADC value
0036   1B80           00108                 btfsc   S_Tmp, D'7'     ; test bit 7
0037   2???           00109                 goto    SelMSB1
0038   1B00           00110                 btfsc   S_Tmp, D'6'     ; test bit 6
0039   2???           00111                 goto    Sel1
                      00112 
003A   1408           00113 Sel0    bsf             LEDs, LD0       ; bits were 00
003B   3001           00114                 movlw   B'00000001'     ; choice 0 selected
003C   2???           00115                 goto    SelBut
                      00116                         
003D   1488           00117 Sel1    bsf             LEDs, LD1       ; bits were 01
003E   3002           00118                 movlw   B'00000010'     ; choice 1 selected
003F   2???           00119                 goto    SelBut
                      00120 
0040                  00121 SelMSB1                                         ; bit 7 was 1, test bit 6
0040   1B00           00122                 btfsc   S_Tmp, D'6'
0041   2???           00123                 goto    Sel3
                      00124 
0042   1508           00125 Sel2    bsf             LEDs, LD2       ; bits were 10
0043   3004           00126                 movlw   B'00000100'     ; choice 2 selected
0044   2???           00127                 goto    SelBut
                      00128 
0045   1588           00129 Sel3    bsf             LEDs, LD3       ; bits were 11
0046   3008           00130                 movlw   B'00001000'     ; choice 1 selected
                      00131 
0047   00??           00132 SelBut  movwf   S_Tmp                   ; W is used in DeBounce
0048   2???           00133                 call    DeBounce
0049   1806           00134                 skipPre
004A   2???           00135                 goto    Sel4Rd          ; no confirmation - start again
                      00136 
004B   0188           00137                 clrf    LEDs            ; blink the selection
004C   3003           00138                 movlw   3
004D   2???           00139                 call    DelWds
004E   08??           00140                 movfw   S_Tmp
004F   0088           00141                 movwf   LEDs
0050   3004           00142                 movlw   4
0051   2???           00143                 call    DelWds
0052   0188           00144                 clrf    LEDs
0053   3003           00145                 movlw   3
0054   2???           00146                 call    DelWds
                      00147 
0055   08??           00148                 movfw   S_Tmp1
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0056   0088           00149                 movwf   LEDs            ; Tmp1 -> LEDs restore before return
                      00150 
0057   08??           00151                 movfw   S_Tmp                   ; return Sel4 in W
                      00152 
0058   0008           00153                 return
                      00154 
                      00155 ; selecting 2 bit binary value
                      00156 ; rotate the potentiometer to have the right LED on 
                      00157 ; then press the button to confirm
                      00158 ; LD4 is used to show that potentiometer input is on
0059                  00159 SelectB
0059   0808           00160                 movfw   LEDs
005A   00??           00161                 movwf   S_Tmp1          ; LEDs -> Tmp1 to restore later
                      00162 
005B   0188           00163 SelBRd  clrf    LEDs
005C   08??           00164                 movfw   S_Tmp1
005D   39C0           00165                 andlw   B'11000000'
005E   0088           00166                 movwf   LEDs            ; restore 3 MSB of LEDs
005F   1608           00167                 bsf             LEDs,LD4        ; indicator on
                      00168 
                      00169 ;               get the two MSBs of the ADC value
0060   2???           00170 SelL2   call    ReadADC
0061   39C0           00171                 andlw   B'11000000'     ; mask unused bits
0062   00??           00172                 movwf   S_Tmp                   ; copy MSBs only
                      00173 
                      00174 ;               rotate MSBs to LSBs
0063   1003           00175                 bcf             STATUS, C       ; clear carry flag as it is used for rotation
0064   0C??           00176                 rrf             S_Tmp, F
0065   0C??           00177                 rrf             S_Tmp, F
0066   0C??           00178                 rrf             S_Tmp, F
0067   0C??           00179                 rrf             S_Tmp, F
0068   0C??           00180                 rrf             S_Tmp, F
0069   0C??           00181                 rrf             S_Tmp, F
                      00182 
006A   0808           00183                 movfw   LEDs
006B   39FC           00184                 andlw   B'11111100'
006C   04??           00185                 iorwf   S_Tmp,W
006D   0088           00186                 movwf   LEDs
                      00187 
006E   2???           00188                 call    DeBounce
006F   1806           00189                 skipPre
0070   2???           00190                 goto    SelBRd          ; loop here until the button is pressed 
                      00191 
0071   0188           00192                 clrf    LEDs            ; blink the result
0072   3003           00193                 movlw   3
0073   2???           00194                 call    DelWds
0074   08??           00195                 movfw   S_Tmp
0075   0088           00196                 movwf   LEDs
0076   3004           00197                 movlw   4
0077   2???           00198                 call    DelWds
0078   0188           00199                 clrf    LEDs
0079   3003           00200                 movlw   3
007A   2???           00201                 call    DelWds
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00202 
007B   08??           00203                 movfw   S_Tmp1
007C   0088           00204                 movwf   LEDs            ; Tmp1 -> LEDs restore before return
                      00205 
007D   08??           00206                 movfw   S_Tmp                   ; return Sel4 in W
                      00207 
007E   0008           00208                 return
                      00209                 
                      00071 
                      00014                 
                      00015 
                      00016 ; Place your SUBROUTINE(S) (if any) here ...  
                      00017 ;{ 
                      00018 ISR     CODE    H'20'
0020                  00019 ISR                                     ;ISR called when Button is pressed (INT)
0020   3001           00020         movlw   d'1'    ;Sets Config mode to 1 for each mode
0021   00??           00021         movwf   ConfigMode      ;Each Mode will call specific config mode depending on which mode is cur
                            rently active
0022   108B           00022         bcf     INTCON, INTF ; Clear INT flag once intterupt serviced
0023   0009           00023         retfie  
                      00024 ;} end of your subroutines
                      00025         
0024                  00026 SampleTime              ;Used for the ADC in the main loop
0024   300A           00027         movlw d'10'     ;Delay of 10ms to allow ADC input to stablise
0025   2???           00028         call DelWms
Warning[203]: Found opcode in column 1. (return)
0026   0008           00029 return
                      00030 
0027                  00031 VariablePWMInit         ;Initialisation function called when VariablePWM mode is selected
                      00032         ;Saving State of SidetoSideStrobe
0027   08??           00033         movfw   count
0028   00??           00034         movwf   countTemp
                      00035         
                      00036         ;clearing Values   
0029   1683 1303      00037         banksel PIE1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
002B   018C           00038         clrf PIE1
                      00039     
002C   1283 1303      00040         banksel CCP1CON
002E   0197           00041         clrf CCP1CON
                      00042     
002F   1283 1303      00043         banksel TMR2
0031   0191           00044         clrf TMR2
                      00045         
0032   1283 1303      00046         banksel LEDs
0034   0188           00047         clrf LEDs
                      00048         
                      00049         ;Step 1 Set up Timer2 for PWM operation
0035   1683 1303      00050         BANKSEL PR2                     ;Select bank 1 and PR2 register
0037   3018           00051         MOVLW b'00011000'       ;Set the PR2 value for 10KHz PWM frequency
                      00052                                                 ;See formula but this value needs to be 19
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0038   0092           00053         MOVWF PR2
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054     
                      00055         ;Step 2 Configure CCP module for PWM
0039   1283 1303      00056         BANKSEL CCP1CON    ; Select bank 1 and CCP1CON register
003B   300C           00057         movlw b'00001100'       ; 1100<3:0> is PWM active High on all PWM ports, 00<5:4> is our required
                             Duty LSB, 01<7:6> is for setup
003C   0097           00058         movwf CCP1CON           ;Note: Not useing the Duty Cycle LSB here so set to 00 and not changed.
                      00059 
                      00060     
                      00061         ;Step 3
                      00062         ;Set the initial duty cycle MSB
003D   1283 1303      00063         BANKSEL CCPR1L     ; Select bank 1 and CCPR1L register
003F   3000           00064         MOVLW b'00000000'  ; Clearing the Duty here as will be set in the main variable loop function
0040   0095           00065         MOVWF CCPR1L
                      00066         
                      00067         
                      00068         ;Step 4
                      00069         ;Configure and start Timer 2 for 10KHz
0041   1283 1303      00070         banksel PIR1
0043   110C           00071         bcf    PIR1,2       ;Clearing the TMR2IF interrupt flag
                      00072     
0044   1283 1303      00073         BANKSEL T2CON       ; Select bank 0 and T2CON register
0046   3005           00074         MOVLW b'00000101'   ; 1:1 Timer 2 Prescaler
                      00075                                                 ; 1:4 postscaler
                      00076                                                 ; Turns T2CON on (Set bit 2)
0047   0092           00077         MOVWF T2CON
                      00078         
                      00079         ;Enable Steering to P1B
0048   1683 1303      00080         BANKSEL PSTRCON
004A   3012           00081         movlw   b'00010010' ;Enables Sterring to P1B
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
004B   009D           00082         movwf   PSTRCON
                      00083         
004C   1283 1303      00084         BANKSEL PIR1 
004E   1C8C           00085         btfss   PIR1, 1 ;wait until Timer 2 Overflows before starting
004F   2???           00086         goto    $-1
                      00087     
                      00088         ;Setting Init incomplete for other two modes
                      00089         ;This means when the mode changes the other modes know to reinitialise
0050   3000           00090         movlw d'0'
0051   00??           00091         movwf   LinearFeedbackInitComplete
0052   00??           00092         movwf   StrobeInitComplete
                      00093         
                      00094         ;Setting Variable PWM init complete so is only initialised once after mode selected
0053   3001           00095         movlw d'1'
0054   00??           00096         movwf VariablePWMInitComplete
Warning[203]: Found opcode in column 1. (return)
0055   0008           00097 return
                      00098         
0056                  00099 VariablePWM     ;Main Variable PWM Function
0056   1C00           00100             btfss VariablePWMInitComplete,0 ;Check if Initialisation is complete
0057   2???           00101             call VariablePWMInit                        ;Call initialisation if not yet performed
                      00102             
0058   1800           00103             btfsc   ConfigMode,0                        ;Check if config enabled via ISR
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0059   2???           00104             call    VariablePWMConfig           ;Calls config function if desired
                      00105             
005A   08??           00106             movfw   Brightness2                         ;Moves Brightness2 into a working variable for t
                            he loops called LoopCountdown
005B   00??           00107             movwf   LoopCountdown
                      00108             
Warning[207]: Found label after column 1. (PWMLoopDown)
005C                  00109     PWMLoopDown                                                 ;PWM 'Count Down loop'
005C   00??           00110             movwf SpeedSelectPWM                        ;User Specified speed for the variable PWM
005D   2???           00111             call DelWms                                         
                      00112             
005E   1283 1303      00113             BANKSEL CCPR1L                              ; Select bank 1 and CCPR1L register
0060   08??           00114             movfw LoopCountdown                         ;Sets the Working variable LoopCountdown to the 
                            duty
0061   0095           00115             MOVWF CCPR1L                                        ;Sets the new duty
                      00116             
                      00117             ;loopcountdown initially holds Brightness2
                      00118             ;Compare birghtness 1 with 2 if no match then reduce 2 
                      00119                 ;This repeats over and over until the Brightness 2 matches Brightness1.
                      00120                 ;At this point program leaves PWMLoopDown and now enters PWMLoopUp to count up
0062   03??           00121             DECF    LoopCountdown,F             ;Decreases LoopCountdown AKA our current duty
0063   08??           00122             movfw   Brightness1                 
0064   06??           00123             xorwf   LoopCountdown,w             ;Xors current LoopCountdown with brightness 1
                      00124            
0065   1D03           00125             btfss   STATUS,Z            ;Checks if Xor was 0 AKA if the LoopCountdown matches Brightnes1
0066   2???           00126             goto    PWMLoopDown    ; jump back to the loop label if count is not zero
                      00127         
0067   08??           00128         movfw   Brightness1                     ;Moves Brightness1 into a working variable for the loops
                             called LoopCountup
0068   00??           00129         movwf   LoopCountup
                      00130             
Warning[207]: Found label after column 1. (PWMLoopUp)
0069                  00131         PWMLoopUp
0069   00??           00132             movwf SpeedSelectPWM                ;User Specified speed for the variable PWM
006A   2???           00133             call DelWms
                      00134             
006B   1283 1303      00135             BANKSEL CCPR1L                      ;Select bank 1 and CCPR1L register
006D   08??           00136             movfw LoopCountup                   ;Sets the Working variable LoopCountup to the initial du
                            ty of brightness1
006E   0095           00137             MOVWF CCPR1L                                ;Sets the new duty
                      00138             
006F   0A??           00139             INCF    LoopCountup,F               ;Increases LoopCountup value
0070   08??           00140             movfw   Brightness2                 ;Moves to W reg
0071   06??           00141             xorwf   LoopCountup,w               ;Checks if the LoopCountup value is the same as Brightne
                            ss 2, stores output in working
                      00142             
0072   1D03           00143             btfss   STATUS,Z            ;Checks if Xor was 0
0073   2???           00144             goto    PWMLoopUp    ; jump back to the loop label if count is not zero    
                      00145                 ;Completes if value was equal to 0
                      00146                 ;repeats
Warning[203]: Found opcode in column 1. (return)
0074   0008           00147 return
                      00148 
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0075                  00149 VariablePWMConfig ;Config Function called when ISR for config is enabled
                      00150             
0075   1283 1303      00151         banksel INTCON          
0077   138B           00152         bcf     INTCON, GIE  ; Global interrupt Diable while in routine
                      00153                                                 ;Select 4 needs button on INT pin so disable own ISR
                      00154                              
                      00155         ;Disable PWM   
0078   1683 1303      00156         banksel PIE1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
007A   018C           00157         clrf PIE1
                      00158     
007B   1283 1303      00159         banksel CCP1CON
007D   0197           00160         clrf CCP1CON
                      00161     
007E   1283 1303      00162         banksel TMR2
0080   0191           00163         clrf TMR2
                      00164         
0081   1283 1303      00165         banksel CCPR1L
0083   0195           00166         clrf    CCPR1L
                      00167         
0084   1283 1303      00168         banksel T2CON
0086   0195           00169         clrf    CCPR1L
                      00170                              
0087   1283 1303      00171         banksel LEDs ;Sets LEDS to Alert that PWM config is enabled
0089   3040           00172         movlw   b'01000000' 
008A   0088           00173         movwf   LEDs
                      00174         
008B   2???           00175         call Select4 ;Pick option 1   ;**** NEED TO COMMENT THE DUTY CORRESPONDING TO EACH NUMBER****
008C   00??           00176         movwf   VariablePWMConfig1
                      00177         
008D   1800           00178         BTFSC   VariablePWMConfig1,0
008E   3005           00179         movlw   D'5'
                      00180 
008F   1880           00181         BTFSC   VariablePWMConfig1,1
0090   300A           00182         movlw   D'10'
                      00183 
0091   1900           00184         BTFSC   VariablePWMConfig1,2
0092   300F           00185         movlw   D'15'
                      00186 
0093   1980           00187         BTFSC   VariablePWMConfig1,3
0094   3014           00188         movlw   D'20'
                      00189         
0095   00??           00190         movwf   SpeedSelectPWM  ;Move chosen value into SpeedSelectPWM
                      00191         
0096   2???           00192         call Select4 ;Pick option 2
0097   00??           00193         movwf   VariablePWMConfig2
                      00194         
0098   1800           00195         BTFSC   VariablePWMConfig2,0
0099   3001           00196         movlw   D'1'
                      00197 
009A   1880           00198         BTFSC   VariablePWMConfig2,1
009B   3002           00199         movlw   D'2'
                      00200 
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009C   1900           00201         BTFSC   VariablePWMConfig2,2
009D   3004           00202         movlw   D'4'
                      00203 
009E   1980           00204         BTFSC   VariablePWMConfig2,3
009F   3008           00205         movlw   D'8'
                      00206         
00A0   00??           00207         movwf   Brightness1                     ;Move chosen value into Brightness1
                      00208         
00A1   2???           00209         call Select4 ;Pick option 3
00A2   00??           00210         movwf   VariablePWMConfig3
                      00211         
00A3   1800           00212         BTFSC   VariablePWMConfig3,0
00A4   3010           00213         movlw   D'16'
                      00214 
00A5   1880           00215         BTFSC   VariablePWMConfig3,1
00A6   3012           00216         movlw   D'18'
                      00217 
00A7   1900           00218         BTFSC   VariablePWMConfig3,2
00A8   3014           00219         movlw   D'20'
                      00220 
00A9   1980           00221         BTFSC   VariablePWMConfig3,3
00AA   3018           00222         movlw   D'24'
                      00223         
00AB   00??           00224         movwf   Brightness2                     ;Move chosen value into Brightness2
                      00225         
                      00226         ;Clear LED's from config mode
00AC   1283 1303      00227         banksel LEDs
00AE   0188           00228         clrf LEDs
                      00229         
                      00230         
00AF   3000           00231         movlw   d'0'
00B0   00??           00232         movwf   ConfigMode      ;Setting ConfigMode to 0 indicating configuration complete
00B1   00??           00233         movwf   VariablePWMInitComplete ;Sets VariablePWMInitComplete to '0', telling the function initi
                            alisation needs to be done again with changes
                      00234         
00B2   1283 1303      00235         banksel INTCON
00B4   108B           00236         bcf     INTCON, INTF            ;Clear the INT flag caused by using Select4
00B5   178B           00237         bsf     INTCON, GIE     ;Global interrupt renable
Warning[203]: Found opcode in column 1. (return)
00B6   0008           00238 return
                      00239         
00B7                  00240 StrobeInit ;Initialisation function for the Strobe Function
                      00241         ;Disables PWM   
00B7   1683 1303      00242         banksel PIE1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00B9   018C           00243         clrf PIE1
                      00244     
00BA   1283 1303      00245         banksel CCP1CON
00BC   0197           00246         clrf CCP1CON
                      00247     
00BD   1283 1303      00248         banksel TMR2
00BF   0191           00249         clrf TMR2
                      00250         
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C0   1283 1303      00251         banksel CCPR1L
00C2   0195           00252         clrf    CCPR1L
                      00253         
00C3   1283 1303      00254         banksel T2CON
00C5   0195           00255         clrf    CCPR1L
                      00256         
                      00257         ;Setting Init incomplete for other two modes
00C6   3000           00258         movlw d'0'
00C7   00??           00259         movwf   LinearFeedbackInitComplete
00C8   00??           00260         movwf   VariablePWMInitComplete
                      00261                 
                      00262         ;Setting Side to side strobe init as complete
00C9   3001           00263         movlw d'1'
00CA   00??           00264         movwf StrobeInitComplete
Warning[203]: Found opcode in column 1. (return)
00CB   0008           00265 return
                      00266         
00CC                  00267 SideToSideStrobe        ;Main function for side to side strobe
00CC   1C00           00268             btfss StrobeInitComplete,0 ;Check if Initialisation is complete
00CD   2???           00269             call StrobeInit                             ;Calles initialisation if not complete
                      00270         
                      00271 ;           btfsc   ConfigMode,0 ;Check if config enabled
                      00272 ;           call    SideToSideStrobeConfig      ;Calls config if ISR has set the config bit
                      00273             
00CE   1003           00274             bcf   STATUS,C              ;Clear the Carry Status Bit
                      00275         
00CF   1C00           00276             BTFSS direction_select, 0  ; Check the direction select bit 
00D0   2???           00277             GOTO ForwardandBack  ;If its 0 do forward and back 
00D1   2???           00278             GOTO ForwardOnly    ;If its 1 do forward only
                      00279             
Warning[207]: Found label after column 1. (ForwardandBack)
00D2                  00280     ForwardandBack ;Forward and back loop    
00D2   1C00           00281             btfss current_direction,0 ;Check if where the forward/back cycle was is complete
00D3   2???           00282             goto loop1  
00D4   2???           00283             goto loop2
                      00284 
00D5   08??           00285             movfw   countTemp       ; load the previous value into the W register
00D6   00??           00286             movwf   count   ; store the value 8 into a variable named count
Warning[207]: Found label after column 1. (loop1)
00D7                  00287     loop1
00D7   08??           00288             MOVFW led_pattern ; Get the current LED pattern
00D8   0088           00289             MOVWF PORTD  ; Output the LED pattern to Port D
00D9   0D??           00290             RLF led_pattern, F  ; Shift the LED pattern left
                      00291             
00DA   3000           00292             movlw   d'0'
00DB   00??           00293             movwf   current_direction
                      00294 
00DC   1800           00295             btfsc   ConfigMode,0                ;Check if config enabled each loop
00DD   2???           00296             call    SideToSideStrobeConfig      ;Calls config if ISR has set the config bit
                      00297             
                      00298             ;Checking Here if mode has changed in the middle of the strobe
00DE   149F           00299             bsf ADCON0, GO_DONE ;Start Aquestision
00DF   189F           00300             btfsc ADCON0, GO_DONE ;Wait until aquesition is done
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E0   2???           00301             goto $-1
00E1   081E           00302             movfw ADRESH                ;Move the 8 MSB (left justified) to working
00E2   39C0           00303             andlw   B'11000000' ; mask unused bits
00E3   3A80           00304             xorlw   d'128'              ;Xor the modeselect with 128 (Expected value of ADC for Mode2 af
                            ter masking)
00E4   1D03           00305             btfss STATUS, Z             ;Checks if the outcome was 0, AKA values match
00E5   2???           00306             goto MLoop  ;If outcome isn't 0 check next possible value
                      00307             
                      00308             ;Delay Here based user selected option
00E6   08??           00309             movfw speedSelect
00E7   2???           00310             call DelWms 
                      00311             
00E8   0B??           00312             decfsz  count, F ; decrement count and skip next instruction if count = 0
00E9   2???           00313             goto    loop1    ; jump back to the loop label if count is not zero
                      00314             
                      00315             ;Restarts count for the reverse motion
00EA   3008           00316             movlw   8       ; load the value 8 into the W register
00EB   00??           00317             movwf   count   ; store the value 8 into a variable named count    
Warning[207]: Found label after column 1. (loop2)
00EC                  00318     loop2
                      00319     
00EC   08??           00320             movfw   countTemp       ; load the previous value into the W register
00ED   00??           00321             movwf   count   ; store the value 8 into a variable named count
                      00322             
00EE   08??           00323             MOVFW led_pattern ; Get the current LED pattern
00EF   0088           00324             MOVWF PORTD  ; Output the LED pattern to Port D
00F0   0C??           00325             RRF led_pattern, F  ; Shift the LED pattern left
                      00326             
00F1   3001           00327             movlw   d'1'
00F2   00??           00328             movwf   current_direction
                      00329 
00F3   1800           00330             btfsc   ConfigMode,0                ;Check if config enabled each loop
00F4   2???           00331             call    SideToSideStrobeConfig      ;Calls config if ISR has set the config bit
                      00332             
                      00333             ;Checking Here if mode has changed in the middle of the strobe
00F5   149F           00334             bsf ADCON0, GO_DONE ;Start Aquestision
00F6   189F           00335             btfsc ADCON0, GO_DONE ;Wait until aquesition is done
00F7   2???           00336             goto $-1
00F8   081E           00337             movfw ADRESH                ;Move the 8 MSB (left justified) to working
00F9   39C0           00338             andlw       B'11000000'     ; mask unused bits
00FA   3A80           00339             xorlw d'128'                ;Xor the modeselect with 128 (Expected value of ADC for Mode2 af
                            ter masking)
00FB   1D03           00340             btfss STATUS, Z             ;Checks if the outcome was 0, AKA values match
00FC   2???           00341             goto MLoop  ;If outcome isn't 0 check next possible value
                      00342             
                      00343             ;Delay Here based on speed
00FD   08??           00344             movfw speedSelect
00FE   2???           00345             call DelWms 
                      00346             
00FF   0B??           00347             decfsz  count, F ; decrement count and skip next instruction if count = 0
0100   2???           00348             goto    loop2    ; jump back to the loop label if count is not zero
                      00349             
                      00350         ;Resetting the LED pattern
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0101   ???? ????      00351         banksel     led_pattern
0103   3001           00352         MOVLW       B'00000001'  ; Initialize the first LED to on
0104   00??           00353         MOVWF       led_pattern
0105   1003           00354         bcf         STATUS,C            ;Clear the Carry Status Bit
0106   2???           00355         goto MLoop                      ;Once the forwards and back is complete goto main to check if th
                            e operation mode has changed
                      00356         
Warning[207]: Found label after column 1. (ForwardOnly)
0107                  00357     ForwardOnly ;Forward ONLY loop
0107   3008           00358             movlw   8       ; load the value 8 into the W register
0108   00??           00359             movwf   count   ; store the value 8 into a variable named count
Warning[207]: Found label after column 1. (loop3)
0109                  00360         loop3
0109   08??           00361             MOVFW led_pattern ; Get the current LED pattern
010A   0088           00362             MOVWF PORTD  ; Output the LED pattern to Port D
010B   0D??           00363             RLF led_pattern, F  ; Shift the LED pattern left
                      00364 
010C   1800           00365             btfsc   ConfigMode,0                ;Check if config enabled each loop
010D   2???           00366             call    SideToSideStrobeConfig      ;Calls config if ISR has set the config bit
                      00367             
                      00368             ;Delay Here based on speed
010E   08??           00369             movfw speedSelect
010F   2???           00370             call DelWms 
                      00371             
0110   0B??           00372             decfsz  count, F ; decrement count and skip next instruction if count = 0
0111   2???           00373             goto    loop3    ; jump back to the loop label if count is not zero
                      00374         ;Resetting the LED pattern
0112   ???? ????      00375         banksel     led_pattern
0114   3001           00376         MOVLW       B'00000001'  ; Initialize the first LED to on
0115   00??           00377         MOVWF       led_pattern
0116   1003           00378         bcf         STATUS,C    
0117   2???           00379         goto MLoop      ;Once the forwards only motion is complete goto main to check if the operation m
                            ode has changed
0118   0008           00380     return
                      00381         
0119                  00382 SideToSideStrobeConfig  ;Configuration Options for the Side to Side strobe
0119   1283 1303      00383         banksel INTCON
011B   138B           00384         bcf     INTCON, GIE  ; Global interrupt Diable while in routine
                      00385                                                 ;Select 4 needs button on INT pin so disable own ISR
011C   1283 1303      00386         banksel LEDs ;Sets LEDS for config mode
011E   3080           00387         movlw b'10000000'
011F   0088           00388         movwf LEDs
                      00389         
0120   2???           00390         call Select4 ;Pick option 1
0121   00??           00391         movwf   SidetoSideConfig1
0122   1800           00392         BTFSC   SidetoSideConfig1,0
0123   300A           00393         movlw   D'10'
                      00394 
0124   1880           00395         BTFSC   SidetoSideConfig1,1
0125   3032           00396         movlw   D'50'
                      00397 
0126   1900           00398         BTFSC   SidetoSideConfig1,2
0127   3064           00399         movlw   D'100'
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00400 
0128   1980           00401         BTFSC   SidetoSideConfig1,3
0129   30FF           00402         movlw   D'255'
                      00403         
012A   00??           00404         movwf   speedSelect
                      00405     
012B   2???           00406         call Select4 ;Pick option 2
012C   00??           00407         movwf   SidetoSideConfig2
012D   1800           00408         BTFSC   SidetoSideConfig2,0
012E   3000           00409         movlw   D'0'
                      00410 
012F   1880           00411         BTFSC   SidetoSideConfig2,1
0130   3000           00412         movlw   D'0'
                      00413 
0131   1900           00414         BTFSC   SidetoSideConfig2,2
0132   3001           00415         movlw   D'1'
                      00416 
0133   1980           00417         BTFSC   SidetoSideConfig2,3
0134   3001           00418         movlw   D'1'
                      00419         
0135   00??           00420         movwf direction_select
                      00421         ;Direction_select 0 Forwards (0->7) and Back (7->0) 
                      00422         ;Direction_select 1 goes to 0-7 before resetting back at 0
                      00423         
0136   ???? ????      00424         banksel ConfigMode      ;Sets Config mode to 0 indicating config is finished
0138   3000           00425         movlw   d'0'
0139   00??           00426         movwf   ConfigMode
                      00427         
013A   1283 1303      00428         banksel INTCON
013C   108B           00429         bcf     INTCON, INTF            ;Clear the INT flag caused by using Select4
013D   178B           00430         bsf     INTCON, GIE             ; Global interrupt renable
Warning[203]: Found opcode in column 1. (return)
013E   0008           00431 return
                      00432 
                      00433         
013F                  00434 xor ;Function used by the main Linear feedback register function
013F   08??           00435         movfw   poly            ;Xor the LFSR_reg with the polynomial
0140   06??           00436         xorwf   LFSR_reg,f      ;Stores the outcome of the XOR in the LFSR_reg variable
Warning[203]: Found opcode in column 1. (return)
0141   0008           00437 return  
                      00438         
0142                  00439 LinearFeedbackRegisterInit      ;Initialises the LFSR
                      00440         ;Disable PWM
0142   1683 1303      00441         banksel PIE1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0144   018C           00442         clrf PIE1
                      00443     
0145   1283 1303      00444         banksel CCP1CON
0147   0197           00445         clrf CCP1CON
                      00446     
0148   1283 1303      00447         banksel TMR2
014A   0191           00448         clrf TMR2
                      00449         
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

014B   1283 1303      00450         banksel CCPR1L
014D   0195           00451         clrf    CCPR1L
                      00452         
014E   1283 1303      00453         banksel T2CON
0150   0195           00454         clrf    CCPR1L
                      00455         
                      00456         
                      00457         ;Setting Init incomplete for other two modes
0151   3000           00458         movlw d'0'
0152   00??           00459         movwf   VariablePWMInitComplete
0153   00??           00460         movwf   StrobeInitComplete
                      00461         
                      00462         ;Setting LinearFeedbackInitComplete complete
0154   3001           00463         movlw d'1'
0155   00??           00464         movwf LinearFeedbackInitComplete
                      00465 
0156   0008           00466         return
                      00467 
0157                  00468 LinearFeedbackRegister ;Main function for linear feedback register
0157   1C00           00469         btfss LinearFeedbackInitComplete,0 ;Check if Initialisation is complete
0158   2???           00470         call LinearFeedbackRegisterInit         ;if not call initialisation function
                      00471         
0159   1800           00472         btfsc   ConfigMode,0                            ;Checks to see if the config is active
015A   2???           00473         call    LinearFeedbackRegisterConfig
                      00474         
015B   08??           00475         movfw   LFSR_reg        ;Moves the initial LFSR value to the LEDs
015C   0088           00476         movwf   PORTD
015D   00??           00477         movwf   LFSR_regtemp
                      00478         
015E   08??           00479         movfw   LSFR_time       ;Calls delay for the user specified time
015F   2???           00480         call    DelWms
                      00481 
0160   1003           00482         bcf     STATUS, C
0161   0C??           00483         rrf     LFSR_reg,f      ;Shift the LFSR value to the right once
                      00484         
0162   1800           00485         btfsc   LFSR_regtemp,0  ;Tests the LSB of the LFSR, if it is 1 then calls the XOR function
0163   2???           00486         call    xor     
                      00487 
0164   0008           00488         return
                      00489 
                      00490         
0165                  00491 LinearFeedbackRegisterConfig    ;COnfiguration mode for the LFSR utility
0165   1283 1303      00492         banksel INTCON
0167   138B           00493         bcf     INTCON, GIE  ; Global interrupt Diable while in routine
                      00494                                                 ;Select 4 needs button on INT pin so disable own ISR
0168   1283 1303      00495         banksel LEDs ;Sets LEDs for config mode
016A   30C0           00496         movlw b'11000000'
016B   0088           00497         movwf LEDs
                      00498         
016C   2???           00499         call Select4 ;Pick option 1     ;Aka time between new LFSR values
016D   00??           00500         movwf   LinearFeedbackConfig1
016E   1800           00501         BTFSC   LinearFeedbackConfig1,0
016F   300A           00502         movlw   D'10'
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00503 
0170   1880           00504         BTFSC   LinearFeedbackConfig1,1
0171   3032           00505         movlw   D'50'
                      00506 
0172   1900           00507         BTFSC   LinearFeedbackConfig1,2
0173   3064           00508         movlw   D'100'
                      00509 
0174   1980           00510         BTFSC   LinearFeedbackConfig1,3
0175   30FF           00511         movlw   D'255'
                      00512         
0176   00??           00513         movwf   LSFR_time
                      00514         
                      00515         
0177   3000           00516         movlw   d'0'            ;Sets config mode to 0 indicating config complete
0178   00??           00517         movwf   ConfigMode
                      00518         
0179   1283 1303      00519         banksel LEDs            ;Clears the config LED's
017B   0188           00520         clrf    LEDs
                      00521         
017C   1283 1303      00522         banksel INTCON
017E   108B           00523         bcf     INTCON, INTF    ;Clear the INT flag caused by using Select4
017F   178B           00524         bsf     INTCON, GIE  ; Global interrupt enable
0180   0008           00525         return
                      00526         
                      00527 ; Provided code - do not edit  
0181   0000           00528 Main    nop
                      00529 #include ECH_INIT.inc
                      00001 ; DO NOT EDIT ! ! !
                      00002 
                      00003 ; initialisation of the pins according to board wiring   
                      00004 ;{
                      00005 ; set all outputs to zero before configuring the pinsLEDs to off before configuring the pins
0182   0185           00006                 clrf    PORTA
0183   0186           00007                 clrf    PORTB
0184   0187           00008                 clrf    PORTC
0185   0188           00009                 clrf    PORTD
0186   0189           00010                 clrf    PORTE
                      00011 
0187   1683 1703      00012                 banksel ANSELH                  ; switch to bank 4
                      00013 
                      00014 ; disable analogue inputs except for RA0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0189   0189           00015                 clrf    ANSELH
018A   3001           00016                 movlw   B'00000001'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
018B   0088           00017                 movwf   ANSEL
                      00018 
018C   1683 1303      00019                 banksel TRISA                   ; switch to bank 1
                      00020 
                      00021 ; init unused pins for PORTA (outputs)
018E   3001           00022                 movlw   B'00000001'     ; this constant was in W already, shown here for clarity
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
018F   0085           00023                 movwf   TRISA
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00024 
                      00025 ; init PORTB (RB0 for input, unused pins for output)
0190   3001           00026                 movlw   B'00000001'     ; this constant was in W already, shown here for clarity
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0191   0086           00027                 movwf   TRISB
                      00028 
                      00029 ; init PORTC (all pins unused - for output)
0192   3000           00030                 movlw   B'00000000'     ; this constant was in W already, shown here for clarity
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0193   0087           00031                 movwf   TRISC
                      00032 
                      00033 ; init LEDs (PORTD to outputs)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0194   0188           00034                 clrf    TRISD
                      00035 
                      00036 ; init PORTE (four pins present, RE3 is MCLR anyway; all outputs for simplicity)
0195   30F8           00037                 movlw   B'11111000'     
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0196   0089           00038                 movwf   TRISE
                      00039 
                      00040 ; init the TMR0 keeping the two MSBs of OPTION_REG the same
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0197   0801           00041                 movfw   OPTION_REG
0198   3908           00042                 andlw   B'00001000'             ; prescaler to WDT to have Tcy clock for TMR0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0199   0081           00043         movwf   OPTION_REG       
                      00044 
                      00045 ; init the ADC - need bank 0 and 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
019A   019F           00046                 clrf    ADCON1          ; Left justified, refernces: Vss and Vdd
019B   1283 1303      00047                 banksel PORTD           ; switch back to bank 0
019D   3041           00048                 movlw   B'01000001'     ; Fosc/8, AN0, enable 
019E   009F           00049                 movwf   ADCON0
                      00050 ;}
                      00051 
                      00052 ;       
                      00053 ; blink LEDs for 0.3 s for testing   
                      00054 ;{
019F   30FF           00055                 movlw   B'11111111'     ; all LEDs ON
01A0   0088           00056                 movwf   LEDs
01A1   3003           00057                 movlw   D'3'            ; delay
01A2   2???           00058                 call    DelWds
01A3   0188           00059                 clrf    LEDs            ; all LEDs OFF
01A4   3003           00060                 movlw   D'3'            ; delay
01A5   2???           00061                 call    DelWds
                      00062 ;}
                      00063 ;
                      00064         
                      00530 
                      00531 ; Place your INITIALISATION code (if any) here ...   
                      00532 ;{ ***          ***************************************************
                      00533 ; e.g.,         movwf   Ctr1 ; etc
                      00534 
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00535 ;Set LED's as output
Warning[205]: Found directive in column 1. (banksel)
01A6   1683 1303      00536 banksel TRISD
Warning[203]: Found opcode in column 1. (movlw)
01A8   3000           00537 movlw   b'00000000'
Warning[203]: Found opcode in column 1. (movwf)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01A9   0088           00538 movwf   TRISD ; Set LEDS as output
                      00539                 
                      00540 ;Enable ISR on INT pin for Config mode activation
Warning[205]: Found directive in column 1. (banksel)
01AA   1683 1303      00541 banksel TRISB
Warning[203]: Found opcode in column 1. (bsf)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01AC   1406           00542 bsf     TRISB, RB0 ; Set INT pin as input
                      00543         
Warning[205]: Found directive in column 1. (banksel)
01AD   1683 1303      00544 banksel OPTION_REG
Warning[203]: Found opcode in column 1. (bsf)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01AF   1701           00545 bsf     OPTION_REG, INTEDG ; Enable interrupt on falling edge
                      00546 
Warning[205]: Found directive in column 1. (banksel)
01B0   1283 1303      00547 banksel INTCON
Warning[203]: Found opcode in column 1. (bsf)
01B2   178B           00548 bsf     INTCON, GIE  ; Global interrupt enable
Warning[203]: Found opcode in column 1. (bsf)
01B3   160B           00549 bsf     INTCON, INTE ; Enable external interrupt
                      00550                 
                      00551 ;ADC SETUP              
Warning[205]: Found directive in column 1. (banksel)
01B4   1683 1303      00552 banksel ADCON1 ;Left Justify, Reference as VSS and GND
                      00553 ;Done this way as select 4 uses same justification so saves having to do as many periperhal changes betw
                            een modes
Warning[203]: Found opcode in column 1. (movlw)
01B6   3000           00554 movlw b'00000000'
Warning[203]: Found opcode in column 1. (movwf)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01B7   009F           00555 movwf ADCON1
                      00556         
Warning[205]: Found directive in column 1. (banksel)
01B8   1683 1303      00557 banksel TRISA   ;Set RA0 to input
Warning[203]: Found opcode in column 1. (bsf)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01BA   1405           00558 bsf TRISA, 0
                      00559         
Warning[205]: Found directive in column 1. (banksel)
01BB   1683 1703      00560 banksel ANSEL ;Set RA0 to analogue      
Warning[203]: Found opcode in column 1. (bsf)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01BD   1408           00561 bsf ANSEL, 0
                      00562 
Warning[205]: Found directive in column 1. (banksel)
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BE   1283 1303      00563 banksel ADCON0 
Warning[203]: Found opcode in column 1. (movlw)
01C0   3041           00564 movlw b'01000001' ;ADC Conversion Clock set bits to internal clock, Set input to AD1, Enable ADC. Clear 
                            Go/done bit
Warning[203]: Found opcode in column 1. (movwf)
01C1   009F           00565 movwf ADCON0      ;ADC <01> is for Internal Clock
                      00566         
Warning[203]: Found opcode in column 1. (Call)
01C2   2???           00567 Call SampleTime         ;Call sample time to allow the ADC input to stabalise
                      00568                                 
                      00569                                 
                      00570 ;Setting Up Initial Variables for Each of the modes
                      00571         ;Variable PWM variabels
                      00572         ;Setting initial Values for user choices
01C3   3005           00573         movlw   d'5'
01C4   00??           00574         movwf Brightness1
                      00575         
01C5   301E           00576         movlw   d'30'
01C6   00??           00577         movwf Brightness2
                      00578         
01C7   30FF           00579         movlw   d'255'
01C8   00??           00580         movwf   SpeedSelectPWM
                      00581         
                      00582         ;Side to Side Strobe Variables
                      00583         ;Setting Initial Values for User config
01C9   30FF           00584         movlw   D'255'
01CA   00??           00585         movwf   speedSelect
                      00586         ;Setting Initial Direction
01CB   3000           00587         movlw   D'0'
01CC   00??           00588         movwf   direction_select
                      00589         
01CD   ???? ????      00590         banksel led_pattern
01CF   3001           00591         MOVLW B'00000001'  ; Initialize the first LED to on
01D0   00??           00592         MOVWF led_pattern
                      00593                                 
                      00594         ;LFSR Variables         
                      00595         ;Initial Value of the time between LFSR values 
01D1   30FF           00596         movlw   d'255'
01D2   00??           00597         movwf   LSFR_time
                      00598         
                      00599         ;Inital Value of the LFSR
01D3   3001           00600         MOVLW 0x01
01D4   00??           00601         MOVWF LFSR_reg
                      00602     
                      00603         ;Sets the Value of the Polynomial
01D5   30B8           00604         MOVLW 0xB8      ;Represents the polynomial '10111000' Aka X^8 + x^6 + x^5 + x^4 +1 which is maxi
                            mal period 
01D6   00??           00605         MOVWF poly
                      00606         
                      00607         
                      00608                 
                      00609 ;} 
                      00610 ; end of your initialisation
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00611 
01D7   0000           00612 MLoop   nop
                      00613 
                      00614 ; place your superloop code here ...  
                      00615 ;{
                      00616 ;Read ADC
Warning[203]: Found opcode in column 1. (bsf)
01D8   149F           00617 bsf ADCON0, GO_DONE ;Start Aquestision
Warning[203]: Found opcode in column 1. (btfsc)
01D9   189F           00618 btfsc ADCON0, GO_DONE ;Wait until aquesition is done
Warning[203]: Found opcode in column 1. (goto)
01DA   2???           00619 goto $-1
Warning[204]: Found pseudo-op in column 1. (movfw)
01DB   081E           00620 movfw ADRESH            ;Move the 8 MSB (left justified) to working
                      00621                 
Warning[203]: Found opcode in column 1. (andlw)
01DC   39C0           00622 andlw   B'11000000'     ; mask unused bits
Warning[203]: Found opcode in column 1. (movwf)
01DD   00??           00623 movwf ModeSelect        ;Move masked value into variable
                      00624                 
                      00625     ; Compare the value to 0
01DE   08??           00626     movfw ModeSelect
01DF   3A00           00627     xorlw d'0'          ;Xor the modeselect with 0
01E0   1D03           00628     btfss STATUS, Z     ;Checks if the outcome was 0
01E1   2???           00629     goto check_two      ;If outcome isn't 0 check next possible value
                      00630         
                      00631     ; Call the mode one subroutine
01E2   2???           00632     call VariablePWM    ;Call first mode 
01E3   2???           00633     goto MLoop                  ;When returning from from call, start main again
                      00634         
Warning[207]: Found label after column 1. (check_two)
01E4                  00635     check_two
                      00636     ; Compare the value to 2
01E4   08??           00637     movfw ModeSelect
01E5   3A80           00638     xorlw d'128'                ;Xor the modeselect with 128 (Expected value of ADC for Mode2 after mask
                            ing)
01E6   1D03           00639     btfss STATUS, Z             ;Checks if the outcome was 0, AKA values match
01E7   2???           00640     goto check_three    ;If outcome isn't 0 check next possible value
                      00641         
                      00642     ; Call the mode two subroutine
01E8   2???           00643     call SideToSideStrobe
01E9   2???           00644     goto MLoop                  ;When returning from from call, start main again
                      00645         
Warning[207]: Found label after column 1. (check_three)
01EA                  00646     check_three
                      00647     ; Compare the value to 3
01EA   08??           00648     movfw ModeSelect
01EB   3AC0           00649     xorlw d'192'                ;Xor the modeselect with 192 (Expected value of ADC for Mode3 after mask
                            ing)
01EC   1D03           00650     btfss STATUS, Z             ;Checks if the outcome was 0, AKA values match
01ED   2???           00651     goto MLoop                  ;If outcome isn't 0 goes to start of main
                      00652         
                      00653     ; Call the mode three subroutine
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01EE   2???           00654     call LinearFeedbackRegister         
                      00655 
                      00656 ;}      
                      00657 ; end of your superloop code
                      00658 
01EF   2???           00659     goto        MLoop
                      00660 
Warning[205]: Found directive in column 1. (end)
00A4 3EFF             00661 end
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000001
ABDEN                             00000000
ABDOVF                            00000007
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS12                             00000004
ANS13                             00000005
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             00000188
ANSELH                            00000189
BAUDCTL                           00000187
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

BRG9                              00000001
BRGH                              00000002
Bop                               00000002
Brightness1                       00000009
Brightness2                       0000000B
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SEN                             00000005
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2RSEL                            00000004
C2SYNC                            00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CM1CON0                           00000107
CM2CON0                           00000108
CM2CON1                           00000109
CREN                              00000004
CSRC                              00000007
ConfigMode                        00000003
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
D_A                               00000005
D_Ctr1                            0000001D
D_Ctr2                            0000001E
D_Ctr3                            0000001F
D_L1                              00000009
D_L2                              00000011
D_L3                              00000016
D_L4                              00000002
D_NOT_A                           00000005
DeBounce                          00000020
DelWds                            00000015
DelWms                            00000010
Del_100us                         00000000
Del_ms                            00000007
ECCPAS                            0000009C
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
FVREN                             00000000
ForwardOnly                       00000107
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

ForwardandBack                    000000D2
GCEN                              00000007
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HTS                               00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
ISR                               00000020
LD0                               00000000
LD1                               00000001
LD2                               00000002
LD3                               00000003
LD4                               00000004
LD5                               00000005
LD6                               00000006
LD7                               00000007
LEDs                              00000008
LFSR_reg                          00000018
LFSR_regtemp                      0000001C
LSFR_time                         0000001B
LTS                               00000001
LinearFeedbackConfig1             0000001A
LinearFeedbackInitComplete        00000017
LinearFeedbackRegister            00000157
LinearFeedbackRegisterConfig      00000165
LinearFeedbackRegisterInit        00000142
LoopCountdown                     0000000C
LoopCountup                       0000000D
MC1OUT                            00000007
MC2OUT                            00000006
MLoop                             000001D7
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

MSK                               00000093
MSK0                              00000000
MSK1                              00000001
MSK2                              00000002
MSK3                              00000003
MSK4                              00000004
MSK5                              00000005
MSK6                              00000006
MSK7                              00000007
Main                              00000181
ModeSelect                        00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000009D
PULSR                             00000002
PULSS                             00000003
PWM1CON                           0000009B
PWMLoopDown                       0000005C
PWMLoopUp                         00000069
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RADC1                             0000001C
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_Old                             00000020
R_W                               00000002
ReadADC                           0000001B
S                                 00000003
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SEN                               00000000
SENDB                             00000003
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             00000185
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

SSPSTAT                           00000094
STATUS                            00000003
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
ST_TMP                            00000001
SWDTEN                            00000000
SYNC                              00000004
S_Tmp                             00000021
S_Tmp1                            00000022
SampleTime                        00000024
Sel0                              0000003A
Sel1                              0000003D
Sel2                              00000042
Sel3                              00000045
Sel4Rd                            0000002E
SelBRd                            0000005B
SelBut                            00000047
SelL2                             00000060
SelMSB1                           00000040
Select4                           0000002C
SelectB                           00000059
SideToSideStrobe                  000000CC
SideToSideStrobeConfig            00000119
SidetoSideConfig1                 00000012
SidetoSideConfig2                 00000014
SpeedSelectPWM                    00000007
StrobeInit                        000000B7
StrobeInitComplete                0000000E
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GIV                             00000007
T1GSS                             00000001
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1GE                            00000006
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

TRISE3                            00000003
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Temp                              00000000
UA                                00000001
ULPWUE                            00000005
ULPWUIE                           00000002
ULPWUIF                           00000002
VCFG0                             00000004
VCFG1                             00000005
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000097
VREN                              00000007
VROE                              00000006
VRR                               00000005
VRSS                              00000004
VariablePWM                       00000056
VariablePWMConfig                 00000075
VariablePWMConfig1                00000006
VariablePWMConfig2                00000008
VariablePWMConfig3                0000000A
VariablePWMInit                   00000027
VariablePWMInitComplete           00000005
W                                 00000000
WCOL                              00000007
WDTCON                            00000105
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPUB                              00000095
WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
W_TMP                             00000000
Z                                 00000002
_BOR21V                           00003EFF
_BOR40V                           00003FFF
_BOR4V_BOR21V                     00003EFF
_BOR4V_BOR40V                     00003FFF
_BOREN_NSLEEP                     00003EFF
_BOREN_OFF                        00003CFF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003DFF
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CONFIG1                          00002007
_CONFIG2                          00002008
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         00001FFF
_DEVID1                           00002006
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_FOSC_EC                          00003FFB
_FOSC_EXTRC_CLKOUT                00003FFF
_FOSC_EXTRC_NOCLKOUT              00003FFE
_FOSC_HS                          00003FFA
_FOSC_INTRC_CLKOUT                00003FFD
_FOSC_INTRC_NOCLKOUT              00003FFC
_FOSC_LP                          00003FF8
_FOSC_XT                          00003FF9
_HS_OSC                           00003FFA
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
MPASM 5.87                       PROGRAM.ASM   4-20-2023  22:43:49         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_ISR_004F                         0000004F
_ISR_00E0                         000000E0
_ISR_00F7                         000000F7
_ISR_01DA                         000001DA
_LP_OSC                           00003FF8
_LVP_OFF                          00002FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDTE_OFF                         00003FF7
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FF9
__16F887                          00000001
check_three                       000001EA
check_two                         000001E4
count                             0000000F
countTemp                         00000010
current_direction                 00000016
direction_select                  00000015
led_pattern                       00000011
loop1                             000000D7
loop2                             000000EC
loop3                             00000109
poly                              00000019
skipPre                           btfsc PORTB,RB0
skipRel                           btfss PORTB,RB0
speedSelect                       00000013
xor                               0000013F

Errors   :     0
Warnings :    44 reported,     0 suppressed
Messages :    23 reported,     0 suppressed

